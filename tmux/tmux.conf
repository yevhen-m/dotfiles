# Options

# command promprt history
set -s history-file ~/.tmux/history
# change tmux prefix
set -g prefix C-a
# use vi key table
set -g mode-keys vi
# turn on mouse support
set-option -g mouse on
# let programs rename windows
set-window-option -g allow-rename on
# hide output of interactive programs
set-window-option -g alternate-screen on
# don't wrap search
set-window-option -g wrap-search off
# change colors for selected text
set-option -g mode-style fg=colour07,bg=colour19
# repeat time delay in ms
set-option -g repeat-time 800
# don't delay ESC in tmux
set -s escape-time 0
# enable focus events
set -g focus-events on
# set TERM to properly display colors
set -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"
# increase history buffer
set-option -g history-limit 50000
# attach to the next session when current session is destroyed
set-option -g detach-on-destroy off
# pass <C-Up>, <S-Up>, etc keys through
set-window-option -g xterm-keys on
# renumber windows when a window is closed
set-option -g renumber-windows on
# show messages until a key is presses
set-option -g display-time 2000
set-option -g status-keys vi
# Don't rename windows
set-window-option -g automatic-rename off
# Change statusline keybindings to emacs
set-option -g status-keys emacs

# Bindings

# unset default bindings for creating splits
unbind-key %
unbind-key '"'
# unbind default tmux prefix
unbind-key C-b
# hit a to send c-a
bind-key a send-prefix
# hit c-a to switch to alternate window
bind-key C-a last-window
# resize panes with m key
bind-key C-m resize-pane -Z
bind-key m resize-pane -Z
# open new window
bind-key w new-window -c "#{pane_current_path}"
bind-key C-w new-window -c "#{pane_current_path}"
# bind c for keyboard interrupt
bind-key c send-keys C-c
bind-key C-c send-keys C-c
# create splits
bind-key \ split-window -h -c "#{pane_current_path}"
bind-key | split-window -h -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"
bind-key "'" split-window -h -c "#{pane_current_path}"
bind-key '"' split-window -v -c "#{pane_current_path}"
# kill pane
bind-key x kill-pane
bind-key C-x kill-pane
# kill window
bind-key q confirm-before kill-window
bind-key C-q confirm-before kill-window
# kill server
bind-key Q confirm-before kill-server
bind-key C-Q confirm-before kill-server
# move windows
bind-key -r > swap-window -t :+
bind-key -r < swap-window -t :-
# pane-movements
bind-key c-h select-pane -L
bind-key h select-pane -L
bind-key c-k select-pane -U
bind-key k select-pane -U
bind-key c-l select-pane -R
bind-key l select-pane -R
bind-key c-j select-pane -D
bind-key j select-pane -D
bind-key c-[ copy-mode
# window-movements
bind-key  c-n next-window
bind-key -r n next-window
bind-key  c-p previous-window
bind-key -r p previous-window
# pane resizing
bind-key -r Left resize-pane -L "5"
bind-key -r Right resize-pane -R "5"
bind-key -r Down resize-pane -D "5"
bind-key -r Up resize-pane -U "5"
# synchronize panes
bind-key * set-window-option synchronize-pane
# reload ~/.tmux.conf
bind-key r source-file ~/.tmux.conf \; display-message "Reloaded!"
# use / to start a search in copy mode
bind-key / copy-mode \; command-prompt -i -p "search up" "send -X search-backward-incremental \"%%%\""
bind-key C-_ copy-mode \; command-prompt -i -p "search up" "send -X search-backward-incremental \"%%%\""
bind-key ? copy-mode \; command-prompt -i -p "search up" "send -X search-backward-incremental \"%%%\""
# use incremental search by default
bind-key -T copy-mode-vi / command-prompt -i -p "search down" "send -X search-forward-incremental \"%%%\""
bind-key -T copy-mode-vi ? command-prompt -i -p "search up" "send -X search-backward-incremental \"%%%\""
# use v to start selection in copy mode
unbind-key -T copy-mode-vi v
bind-key -T copy-mode-vi v send -X begin-selection
# enter copy-mode with c-[
bind-key C-[ copy-mode
# switch session
bind-key -r ( switch-client -p
bind-key -r ) switch-client -n
# tmux yank mappings with clear-selection
bind-key -T copy-mode y send-keys -X copy-pipe "reattach-to-user-namespace pbcopy" \; send-keys -X clear-selection
bind-key -T copy-mode Y send-keys -X copy-pipe-and-cancel "tmux paste-buffer"
bind-key -T copy-mode-vi y send-keys -X copy-pipe "reattach-to-user-namespace pbcopy" \; send-keys -X clear-selection
bind-key -T copy-mode-vi Y send-keys -X copy-pipe-and-cancel "tmux paste-buffer"
unbind   -T copy-mode MouseDragEnd1Pane
unbind   -T copy-mode-vi MouseDragEnd1Pane

# Statusline

set -g status "on"
set -g status-attr "none"
set -g status-justify "left"

set -g status-right-length "100"
set -g status-left-attr "none"
set -g status-left-length "100"
set -g status-right-attr "none"

set -g status-bg colour19
set -g status-fg colour07

set -g message-bg colour19
set -g message-fg colour07

set -g message-command-fg colour07
set -g message-command-bg colour19

setw -g window-status-format " #I:#W#F "
setw -g window-status-current-format "#[bg=colour237] #[bg=colour236] #W#{?window_zoomed_flag,-Z,} #[bg=colour237] #[bg=colour238] "

setw -g window-status-fg colour07
setw -g window-status-bg colour19
setw -g window-status-attr "none"

setw -g window-status-activity-fg colour07
setw -g window-status-activity-bg colour19
setw -g window-status-activity-attr "underscore"

set -g pane-border-fg "colour237"
set -g pane-active-border-fg "colour110"

setw -g window-status-separator ""
set -g status-left "#[bg=colour12] #[bg=colour238] #[bg=colour237] #[bg=colour236]#[fg=colour21] #S #[bg=colour237] #[bg=colour238]#{?client_prefix, A , - }#[bg=colour238]"
set -g status-right "#[bg=colour238] #[bg=colour237] #{battery_percentage} | %R #[bg=colour238] "

# Plugins

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'yevhen-m/tmux_switch_session'

# tmux-better-mouse-mode settings
set -g @scroll-without-changing-pane "on"
set -g @emulate-scroll-for-no-mouse-alternate-buffer "on"

# Plugin manager

# Autoinstall TPM
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm \
   ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

if-shell '[[ $(tmux list-sessions | wc -l ) -eq 0 ]]' 'run-shell $HOME/.tmux/plugins/tmux-resurrect/scripts/restore.sh'

# (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
